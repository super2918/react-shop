[{"/Users/shinyoung/Desktop/super2918/react/react-shop/src/Detail.js":"1","/Users/shinyoung/Desktop/super2918/react/react-shop/src/App.js":"2","/Users/shinyoung/Desktop/super2918/react/react-shop/src/data.js":"3","/Users/shinyoung/Desktop/super2918/react/react-shop/src/reportWebVitals.js":"4","/Users/shinyoung/Desktop/super2918/react/react-shop/src/Cart.js":"5","/Users/shinyoung/Desktop/super2918/react/react-shop/src/index.js":"6"},{"size":4129,"mtime":1613628833348,"results":"7","hashOfConfig":"8"},{"size":4132,"mtime":1613611047538,"results":"9","hashOfConfig":"8"},{"size":348,"mtime":1611725303075,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1611367266338,"results":"11","hashOfConfig":"8"},{"size":1811,"mtime":1613628060374,"results":"12","hashOfConfig":"8"},{"size":2538,"mtime":1613628645167,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hlix23",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shinyoung/Desktop/super2918/react/react-shop/src/Detail.js",["27","28","29","30"],"/Users/shinyoung/Desktop/super2918/react/react-shop/src/App.js",["31","32"],"import { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useContext, useState } from 'react';\nimport Data from './data';\nimport Detail from './Detail';\nimport Cart from './Cart';\nimport axios from 'axios';\nimport { Link, Route, Switch } from 'react-router-dom';\n\nexport  let stockcontext = React.createContext(); // 1.값은 값을 공유할 범위를 생성, 다른 파일에도 적용하고 싶으면 export하면 된다.\n\nfunction App() {\n\n  let [ shoes, setShoes ] = useState(Data); \n  let [ stock, setStock ] = useState([10, 11, 12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\" className=\"\">\n        <Navbar.Brand href=\"#home\">Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"bg-main\">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n            {/* 2. 값 공유를 원한는 HTML들을 <범위.Provider>로 감싸고 value={공유원하는 값} */}\n            <stockcontext.Provider value={stock}> \n\n            <div className=\"row\">\n              {\n                shoes.map((item, i) => {\n                  return <Card shoes={shoes[i]} index={i} key={i} />\n                })\n              }\n            </div>\n\n            </stockcontext.Provider>\n\n          </div>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\n\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then((result) => {\n              console.log(result.data);\n              setShoes([...shoes, ...result.data]);\n            })\n            .catch(() => {\n              console.log('실패');\n            })\n          \n          }}>더보기</button>\n\n        </Route>\n        {/* id: id */}\n        <Route path=\"/detail/:id\">\n          <stockcontext.Provider value={stock}>\n            <Detail shoes={shoes} stock={stock} setStock={setStock} />\n          </stockcontext.Provider>\n        </Route>\n\n        {/* <Route path=\"/:id\">\n          <div>아무 문자나 받는 URL 작성명 parameter 작성법</div>\n        </Route> */}\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\n\nfunction Card(props) {\n\n  // props전송 없이 stock이라는 state값을 사용가능 \n  // 3.useContext(범위이름)로 공유된 값을 사용한다.\n  // 간단한 전송은 props가 더 효율적이다.\n  let stock = useContext(stockcontext); \n\n  return(\n    <div className=\"col-md-4\">\n      <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.index + 1) + '.jpg' } width=\"100%\"/>\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content }</p>\n      <span>{ props.shoes.price }</span>\n      <div>{stock[props.index]}</div>\n      <Test />\n    </div>\n  )\n}\n\nfunction Test() {\n\n  let stock = useContext(stockcontext); // stock을 받아오는 것 props를 선언하지 않아도 한다.\n\n  return <p>재고 : {stock} </p>\n}\n\n\nexport default App;\n","/Users/shinyoung/Desktop/super2918/react/react-shop/src/data.js",["33"],"/Users/shinyoung/Desktop/super2918/react/react-shop/src/reportWebVitals.js",[],"/Users/shinyoung/Desktop/super2918/react/react-shop/src/Cart.js",[],"/Users/shinyoung/Desktop/super2918/react/react-shop/src/index.js",["34"],{"ruleId":"35","severity":1,"message":"36","line":13,"column":9,"nodeType":"37","messageId":"38","endLine":13,"endColumn":14},{"ruleId":"35","severity":1,"message":"39","line":13,"column":16,"nodeType":"37","messageId":"38","endLine":13,"endColumn":24},{"ruleId":"35","severity":1,"message":"40","line":14,"column":7,"nodeType":"37","messageId":"38","endLine":14,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":63,"column":9,"nodeType":"43","endLine":63,"endColumn":105},{"ruleId":"35","severity":1,"message":"44","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":110,"column":7,"nodeType":"43","endLine":110,"endColumn":107},{"ruleId":"45","severity":1,"message":"46","line":1,"column":1,"nodeType":"47","endLine":24,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":59,"column":3,"nodeType":"50","messageId":"51","endLine":59,"endColumn":15},"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'setInput' is assigned a value but never used.","'stock' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode"]